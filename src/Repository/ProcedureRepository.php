<?php

namespace App\Repository;

use App\Traits\RepositoryPaginatorTrait;

/**
 * ProcedureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProcedureRepository extends \Doctrine\ORM\EntityRepository
{
    use RepositoryPaginatorTrait;

    /**
     * @param $filters
     * @param int $currentPage
     * @param int $perPage
     * @return \Doctrine\ORM\Tools\Pagination\Paginator
     */
    public function getAvailableProcedures($filters, $currentPage = 1, $perPage = 20)
    {
        $qb = $this->createQueryBuilder('pro');

        $qb->select('pro');

        if (!empty($filters['name'])) {
            $qb
                ->leftJoin('pro.patient', 'pa')
                ->where(
                    $qb->expr()->like('pa.name', ':name')
                )
                ->setParameter('name', $filters['name'])
            ;
        }

        if (!empty($filters['startAt'])) {
            list($startAt, $endAt) = explode(' - ', $filters['startAt']);

            $startAt = new \DateTime($startAt);
            $endAt = new \DateTime($endAt);

            $qb
                ->andWhere(
                    $qb->expr()->between('pro.startAt', ':startAt', ':endAt')
                )
                ->setParameter('startAt', $startAt)
                ->setParameter('endAt', $endAt);
        }

        $paginator = $this->paginate($qb, $currentPage, $perPage);
        return $paginator;
    }
}